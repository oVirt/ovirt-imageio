# SPDX-FileCopyrightText: Red Hat, Inc.
# SPDX-License-Identifier: GPL-2.0-or-later
#
# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = reuse,flake8,test-{py36,py38,py39,py310},bench-{py36,py38,py39,py310},client
skip_missing_interpreters = True
whitelist_externals =
    ip

[testenv]
passenv = *
usedevelop = True
deps =
    test,bench: pytest
    test,bench: userstorage>=0.5.1
    py38: systemd
    test: pytest-cov
    test: pytest-timeout
commands_pre =
    # Build ioutil for both current python (e.g. 3.8) and platform python (e.g. 3.6)
    python setup.py build_ext --build-lib .
    /usr/bin/python3 setup.py build_ext --build-lib .
    python -c 'from test import testutil; print("ipv6 supported: %s" % testutil.ipv6_enabled())'
commands =
    test: pytest -m 'not benchmark' --ignore=test/client --cov=ovirt_imageio --durations=10 {posargs}
    bench: pytest -m 'benchmark' -vs --ignore=test/client {posargs}

[testenv:client]
setenv =
    CLIENT_TEST_CONF = {env:CLIENT_TEST_CONF:{toxinidir}/test/client/client_tests.conf}
deps =
    pytest
    pytest-timeout
    pyyaml
    ovirt-engine-sdk-python
    userstorage>=0.5.1
commands =
    pytest -vs --timeout 200 {posargs} test/client

[testenv:reuse]
deps =
    reuse
commands =
    reuse lint

[testenv:flake8]
deps =
    flake8==3.9
commands =
    flake8

[flake8]
show_source = True
statistics = True
exclude =
    # hiden directories like .tox and .local in CI.
    .*,
    # Generated files.
    __pycache__,
    build,
    dist,

[pytest]
# -r chars: (s)skipped, (x)failed, (X)passed
# --strict: ensure no unregistered markers are used
addopts = -rsxX --basetemp=/var/tmp/imageio-tests --strict

# Registered marks.
# https://docs.pytest.org/en/latest/mark.html
markers =
    benchmark
    timeout

log_level = debug
log_format = %(asctime)s,%(msecs)03d %(levelname)-7s (%(threadName)s) [%(name)s] %(message)s
timeout = 30
timeout_method = thread
